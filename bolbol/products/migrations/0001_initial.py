# Generated by Django 5.1.5 on 2025-01-22 11:22

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('is_pinned', models.BooleanField(default=False, help_text='Shown as main city in footer', verbose_name='Is pinned')),
                ('order', models.PositiveSmallIntegerField(default=0, help_text='Order of cities in dropdown', unique=True, verbose_name='Order')),
            ],
            options={
                'verbose_name': 'City',
                'verbose_name_plural': 'Cities',
                'ordering': ('is_pinned', 'order'),
            },
        ),
        migrations.CreateModel(
            name='ProductPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='%Y/%m/%d/products/photos', verbose_name='Image')),
                ('order', models.PositiveSmallIntegerField(default=0, verbose_name='Order')),
            ],
            options={
                'verbose_name': 'Product photo',
                'verbose_name_plural': 'Product photos',
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Warning! Don't change this and any other fields here, or it will break the system!", max_length=255, verbose_name='Name')),
                ('icon', models.FileField(blank=True, null=True, upload_to='%Y/%m/%d/categories', verbose_name='Image')),
                ('order', models.IntegerField(verbose_name='Display order')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('is_delivery_enabled', models.BooleanField(default=False, verbose_name='Is delivery option enabled')),
                ('is_new_product_enabled', models.BooleanField(default=False, verbose_name='Is new product option enabled')),
                ('is_credit_enabled', models.BooleanField(default=False, verbose_name='Is credit option enabled')),
                ('is_barter_enabled', models.BooleanField(default=False, verbose_name='Is barter option enabled')),
                ('is_negotiator_enabled', models.BooleanField(default=False, verbose_name='Is negotiator option enabled')),
                ('main_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='sub_categories', related_query_name='sub_category', to='products.category', verbose_name='Main category')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name')),
                ('price', models.DecimalField(decimal_places=2, max_digits=20, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000000000)], verbose_name='Price')),
                ('description', models.TextField(blank=True, max_length=3000, null=True, verbose_name='Description')),
                ('is_new_product', models.BooleanField(default=False, verbose_name='Is new product')),
                ('is_delivery_available', models.BooleanField(blank=True, default=False, null=True, verbose_name='Is delivery available')),
                ('is_credit_available', models.BooleanField(default=False, verbose_name='Is credit available')),
                ('is_barter_available', models.BooleanField(default=False, verbose_name='Is barter available')),
                ('is_via_negotiator', models.BooleanField(default=False, verbose_name='Is via negotiator')),
                ('is_vip', models.BooleanField(db_index=True, default=False, verbose_name='Is vip')),
                ('is_premium', models.BooleanField(db_index=True, default=False, verbose_name='Is premium')),
                ('is_promoted', models.BooleanField(db_index=True, default=False, verbose_name='Is promoted')),
                ('is_super_chance', models.BooleanField(db_index=True, default=False, verbose_name='Super chance')),
                ('status', models.IntegerField(blank=True, choices=[(0, 'Pending'), (1, 'Approved'), (2, 'Rejected')], default=0, null=True, verbose_name='Status')),
                ('is_active', models.BooleanField(default=False, verbose_name='Is active')),
                ('extra_filters', models.JSONField(blank=True, null=True)),
                ('view_count', models.PositiveIntegerField(default=0, verbose_name='Views count')),
                ('slug', models.SlugField(blank=True, max_length=255, null=True, verbose_name='Slug')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated at')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Expires at')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='category_products', related_query_name='category_product', to='products.category', verbose_name='Category')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='products', related_query_name='product', to='products.city', verbose_name='City')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ('-updated_at',),
            },
        ),
    ]
