
services:

  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bolbol
    restart: always
    env_file: ".env"
    depends_on:
      - redis
      - elasticsearch 
    volumes:
      - ./static:/code/bolbol/static
      - ./uploads:/code/bolbol/uploads
    networks:
      - backend
    command: gunicorn bolbol.wsgi:application --bind 0.0.0.0:8000

  celery:
    build:
      context: .
      dockerfile: Dockerfile.celery
    container_name: celery_worker
    restart: always
    depends_on:
      - redis
    networks:
      - backend

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - backend
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    networks:
      - backend
  
  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    container_name: nginx
    restart: always
    ports:
      - "80:80"
    depends_on:
      - web
    volumes:
      - ./static:/app/static
      - ./uploads:/app/uploads
    networks:
      - backend

networks:
  backend:
    driver: bridge
